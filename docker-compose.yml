version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_TIME: '${BUILD_TIME:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}'
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ORIGIN=http://localhost:3000
      - DATABASE_URL=postgresql://example_user:example_password@db:5432/example_db
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - example-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=example_db
      - POSTGRES_USER=example_user
      - POSTGRES_PASSWORD=example_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U example_user -d example_db']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - example-network

volumes:
  postgres_data:
    driver: local

networks:
  example-network:
    driver: bridge
